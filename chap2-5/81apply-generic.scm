(load "81coerciontable.scm")


(define (attach-tag type-tag contents)
  (cons type-tag contents))
(define (type-tag datum)
  (if (pair? datum)
      (car datum)
      (error "Bad tagged datum -- TYPE-TAG" datum)))
(define (contents datum)
  (if (pair? datum)
      (cdr datum)
      (error "Bad tagged datum -- CONTENTS" datum)))
(define (apply-generic op . args)
	(let ((type-tags (map type-tag args)))
	(let ((proc (get type-tag args)))  ;;; (map type-tag args) -have made a mistake for whole a day!! wrong"map"
		(if proc (apply proc (map contents args))
		  (if (= (length args) 2) 
			(let ((type1 (car type-tags))
					(type2 (cadr type-tags))
					(a1 (car args))
					(a2 (cadr args)))
				(let ((t1->t2 (get-coercion type1 type2))
					  (t2->t1 (get-coercion type2 type1)))
					(cond (t1->t2 (apply-generic op (t1->t2 a1) a2))
						  (t2->t1 (apply-generic op a1  (t2->t1 a2)))		
						  (else (error "no method for these types" (list op type-tags))))))
				(error "no method" (list op type-tags)))))))
