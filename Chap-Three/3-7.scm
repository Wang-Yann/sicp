(define (make-account balance password)
	(define (withdraw x)
		(if (>= balance x) (begin (set! balance (- balance x) ) balance)
	        	"unsufficient funds"))
	(define (deposit x) 
		  (set! balance (+ balance x) )balance)
	(define (match args) (eq? args password))
	(define (dispatch m given-password)
		(if  (eq? given-password password ) 
		(cond ((eq? m 'withdraw) withdraw)
			 ((eq? m 'deposit ) deposit)
			((eq? m 'match) match)
			(else (error "Unknown request")))
		(lambda (x)"Incorrect password")));; nongcuo le fuhao diaoyong shunxu
	dispatch)
(define (make-joint account o-pwd n-pwd)
	(lambda (m  given-password)
	(if (eq? n-pwd given-password) 
		(account m o-pwd)
		(lambda(x) display "WRONG PASSWORD"))))
;	(define new-acc (make-account 0  n-pwd))
;	(if ((account 'match o-pwd ) o-pwd)
;	((set!  new-acc  account) account)  "wrond" ))
(define peter-acc (make-account 1000 'abc))
(define paul-acc (make-joint peter-acc 'abc 'def))
