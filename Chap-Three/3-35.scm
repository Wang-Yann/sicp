(load "probe-connector.scm")
 (load "constraint.scm")
 (load "make-connector.scm")
(define (squarer a b) 
	(define (process-new-value)
		(if (has-value? b) 
			(if (< (get-value b) 0) (error "square < 0 " (get-value b))
				(set-value! a (sqrt (get-value b)) me)))
		(if (has-value? a)
				(set-value! b (square (get-value a)) me)))
	(define (process-forget-value)
		(forget-value! b me)
		(forget-value! a me))
	(define (me request)
		(cond ((eq? request 'I-have-a-value) (process-new-value))
			  ((eq? request 'I-lost-my-value) (process-forget-value))
			  (else (error "Unknown-request---squarer" request))))
	(connect a me)
	(connect b me)
me)
(define a (make-connector))
(define b (make-connector))
(probe " A temp" a)
(probe " B temp " b)
(squarer a b)
